#Thu Dec 08 19:39:33 GMT 2011
cmdhistory=["(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.server)))" "(require 'billshare.server)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.server)))" "(require 'billshare.server)" "(billshare.server/-main)" "(in-ns 'billshare.views.welcome)" "(defpage \\"/\\" []\\r\\n  (when-not (noir.session/get \:user-info)\\r\\n    (noir.response/redirect \\"/login.html\\")\\r\\n    (noir.response/redirect \\"/userMain.html\\")))\\r\\n" "(source include-js)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.welcome)))" "(require 'billshare.server)" "(billshare.server/-main)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.welcome)))" "(require 'billshare.server)\\n" "(billshare.server/-main)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.welcome)))" "(require 'billshare.server)\\n" "(billshare.server/-main)" "(require 'billshare.server)\\n" "(billshare.server/-main)" "(require 'billshare.server)\\n" "(billshare.server/-main)" "(require 'billshare.server)\\n" "(billshare.server/-main)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.common)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.welcome)))" "(require 'billshare.server)\\n" "(billshare.server/-main)" "(require 'billshare.server)\\n" "(in-ns 'billshare.server)\\n" "(-main)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model)))" "(in-ns 'billshare.models.data-model)\\n" "(def bama (User. 1 \\"bama\\" \\"pword\\" nil \\"bama\\" \\"b\\" 0))" "(ds/save\! bama)" "(use 'clojure.test)\\r\\n(require '[appengine-magic.testing \:as ae-testing])\\r\\n\\r\\n(use-fixtures \:each (ae-testing/local-services \:all))" "(ds/save\! bama)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(in-ns 'billshare.models.data-model-test)" "(model/User. )" "(in-ns 'billshare.models.data-model)" "(User. )" "(in-ns 'billshare.models.data-model-test)" "(User. )" "(model/User. )" "(ds/defentity User [^\:key id \\tname \\tpassword \\trandom \\tusername \\temail \\tactiveStatus])" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(source ds/new*)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(in-ns 'billshare.models.data-model-test)" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(def user (ds/new* User [\\"bama\\" \\"pword\\" nil \\"bama\\" \\"b\\" 0])" "(def user (ds/new* User [\\"bama\\" \\"pword\\" nil \\"bama\\" \\"b\\" 0]))" "(def house(ds/new* House [\\"ahouse\\" \\"big\\"]))" "(def uhr (ds/new* UserHouseRelation [\\"inactive\\" user house]) )" "(ds/save\! uhr)" "\\r\\n(use-fixtures \:each (ae-testing/local-services \:all))" "(ds/save\! uhr)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.core)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.google-tests)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.core)))" "(require '[appengine-magic.core \:as ae])" "(ae/serve foo-app)" "(ae/serve billshare-app)" "(in-ns 'bilshare.core\\n       )" "(require '[appengine-magic.core \:as ae])" "(ae/serve billshare-app)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.core)))" "(require '[appengine-magic.core \:as ae])" "(use '[appengine-magic.core \:as ae])" "(doc doc)" "(doc require)" ";; Loading file src\\\\billshare\\\\core.clj" ";; Switching to billshare.core namespace" "(require '[appengine-magic.core \:as ae])" "(ae/serve billshare-app)" "(ae/stop)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" ";; Switching to billshare.models.data-model-test namespace" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.google-tests)))" ";; Switching to billshare.views.google-tests namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.app_servlet)))" ";; Switching to billshare.app_servlet namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.google-tests)))" ";; Switching to billshare.app_servlet namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.google-tests)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.app_servlet)))" ";; Switching to billshare.app_servlet namespace" "{\:destination \\"/user\\"}\\n" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.app_servlet)))" ";; Switching to billshare.app_servlet namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" ";; Switching to billshare.models.data-model-test namespace" "(run-tests\\n  )" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model)))" ";; Switching to billshare.models.data-model namespace" "(Tesla. \\"\\")" "(billshare.models.data-model/Tesla. \\"\\")\\r\\n" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" ";; Switching to billshare.models.data-model-test namespace" "(run-tests\\n  )" ";; Switching to billshare.app_servlet namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.core)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.groups-manager)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.core)))" ";; Switching to billshare.core namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.app_servlet)))" ";; Switching to billshare.app_servlet namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" ";; Switching to billshare.models.data-model-test namespace" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" ";; Switching to billshare.models.data-model-test namespace" "(run-tests)" "(doc if-let)" "(if-let [a \\"hello\\"] a)" "(if-let [a false] a)" "(doc assoc)" "(if-let [a false] a \\"v\\")" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.data-model-test)))" ";; Switching to billshare.models.data-model-test namespace" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" ";; Switching to billshare.models.user-service-test namespace" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" ";; Switching to billshare.models.user-service-test namespace" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" ";; Switching to billshare.models.user-service-test namespace" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.models.user-service-test)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.test-root)))" ";; Switching to billshare.views.test-root namespace" "(run-tests)" "(source defpage\\n        )" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.test-groups-manager)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.groups-manager)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.common)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.groups-manager)))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.test-groups-manager)))" ";; Switching to billshare.views.test-groups-manager namespace" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.test-groups-manager)))" "(run-tests)" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'billshare.views.test-groups-manager)))" "(run-tests)"]
eclipse.preferences.version=1
